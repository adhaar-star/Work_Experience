# Generated by Django 3.1.4 on 2020-12-16 23:00

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True
    '''
    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]
    '''
    dependencies = []
    operations = [
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('Employee_Id', models.AutoField(primary_key=True, serialize=False)),
                ('user_id', models.CharField(max_length=255)),
                ('Name', models.CharField(max_length=255)),
                ('Phone', models.CharField(max_length=255)),
                ('Job_Title', models.CharField(max_length=255)),
                ('company_name', models.CharField(max_length=255)),
                ('company_industry', models.CharField(max_length=255)),
                ('customer_id', models.CharField(default=None, max_length=255)),
                ('created_at', models.DateField(auto_now=True)),
                ('modified_at', models.DateField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Employers',
            fields=[
                ('employer_id', models.AutoField(primary_key=True, serialize=False)),
                ('user_id', models.CharField(max_length=255)),
                ('Name', models.CharField(max_length=255)),
                ('Phone', models.CharField(max_length=255)),
                ('job_title', models.CharField(max_length=255)),
                ('company_name', models.CharField(max_length=255)),
                ('company_industry', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Experience',
            fields=[
                ('Experience_Id', models.AutoField(primary_key=True, serialize=False)),
                ('Experience_level', models.CharField(max_length=255)),
                ('created_at', models.DateField(auto_now=True)),
                ('modified_at', models.DateField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Expertise',
            fields=[
                ('Expertise_Id', models.AutoField(primary_key=True, serialize=False)),
                ('Expertise_level', models.CharField(max_length=255)),
                ('created_at', models.DateField(auto_now=True)),
                ('modified_at', models.DateField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Questions',
            fields=[
                ('Question_Id', models.AutoField(primary_key=True, serialize=False)),
                ('Question', models.TextField()),
                ('created_at', models.DateField(auto_now=True)),
                ('modified_at', models.DateField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Skill_Level',
            fields=[
                ('Skill_Id', models.AutoField(primary_key=True, serialize=False)),
                ('Level', models.CharField(max_length=255)),
                ('created_at', models.DateField(auto_now=True)),
                ('modified_at', models.DateField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Video_Stats',
            fields=[
                ('Video_Id', models.AutoField(primary_key=True, serialize=False)),
                ('user_id', models.CharField(max_length=255)),
                ('video_name', models.CharField(max_length=100)),
                ('created_at', models.DateField(auto_now=True)),
                ('modified_at', models.DateField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Videos',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.CharField(max_length=100)),
                ('image_name', models.CharField(max_length=100)),
                ('video', models.FileField(upload_to='videos/')),
            ],
            options={
                'verbose_name': 'video',
                'verbose_name_plural': 'videos',
            },
        ),
        migrations.CreateModel(
            name='Candidates',
            fields=[
                ('candidate_id', models.AutoField(primary_key=True, serialize=False)),
                ('user_id', models.CharField(max_length=255)),
                ('Name', models.CharField(max_length=255)),
                ('blocked', models.TextField(default=None)),
                ('url', models.TextField()),
                ('video_url', models.TextField()),
                ('created_at', models.DateField(auto_now=True)),
                ('updated_at', models.DateField(auto_now=True)),
                ('experience', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='splash.experience')),
                ('expertise', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='splash.expertise')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='splash.questions')),
            ],
        ),
        migrations.CreateModel(
            name='MyUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email')),
                ('is_employer', models.BooleanField(default=False, verbose_name='is_employer')),
                ('is_candidate', models.BooleanField(default=False, verbose_name='is_candidate')),
                ('is_admin', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
    ]
