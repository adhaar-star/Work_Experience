<?php
/**
 * @package Vending
 * @author Kekoa Vincent kekoa@pacificblueweb.com
 * @version 0.1
 * @filesource
 */


/**
 * Initialization of variables and necessary functions for use througout the program's operation
 */

require("config/configuration.php");

/**
 * Smarty configuration
 */
define("SMARTY_DIR", "smarty/");
require('smarty/Smarty.class.php');

/** Open database connection */
Database::Connect();


/**
 * This function will load the class that is needed only when required
 */
function __autoload($class_name) {
	$directories = array("base");
	foreach($directories as $dir) {
		if(file_exists($dir.'/'.$class_name.'.php')) {
			require_once ($dir.'/'.$class_name.'.php');
			break;
		}
	}
}



/**
 * Error Handling function
 *
 * This function will handle errors that are generated by PHP or by a call to
 * trigger_error()
 */
function ErrorHandler ( $errno, $errstr, $errfile, $errline, $errcontext ) {
	echo '<div class="error"><p>'."$errno : $errstr in $errfile:$errline<br>\n";

	if(DEBUG) {
		echo "<ul>";
		foreach(debug_backtrace() as $traceEntry){
			echo "<li>at ".$traceEntry['class']."::".$traceEntry['function'].
				" in ".str_replace($_SERVER[''], '', $traceEntry['file']).':'.
				$traceEntry['line'].'<br>';
			print_r($traceEntry['object']);
			echo "</li>";
		}
		echo "</ul>";
	}

}

/**
 * Activate Error Handler
 *
 * Set the error handler to our custom one. The bitmask for codes that the error
 * handler will accept.  Only values below the number will be processed
 *
 * @see ErrorHandler()
 */
set_error_handler("ErrorHandler", 0x7FF & !E_NOTICE);

/**
 * Assertion Evaluation
 *
 * If we are in debug mode assertions should be turned on.  When DEBUG constant
 * is set to 0, assertions are turned off.
 */
assert_options(ASSERT_ACTIVE, DEBUG);

/**
 * System Init Variables
 *
 * Here we will set system variables for details such as sessions, file uploads
 * and other configuration options that need to be initialized
 */
ini_set("upload_max_filesize", FILE_UPLOAD_MAX_SIZE);

// Session settings
session_start();

// AJAX helper
include('xajax/xajax.inc.php');

$xajax = new xajax(); 

require('base/AJAXFunctions.php');
?>
