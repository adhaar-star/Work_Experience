{"remainingRequest":"/Users/adhaarjaiswal/Desktop/My Documents/hello-world/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/adhaarjaiswal/Desktop/My Documents/hello-world/src/components/DashboardOne.vue?vue&type=style&index=0&id=c6e0033c&scoped=true&lang=css&","dependencies":[{"path":"/Users/adhaarjaiswal/Desktop/My Documents/hello-world/src/components/DashboardOne.vue","mtime":1608518822752},{"path":"/Users/adhaarjaiswal/Desktop/My Documents/hello-world/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/adhaarjaiswal/Desktop/My Documents/hello-world/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/adhaarjaiswal/Desktop/My Documents/hello-world/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/adhaarjaiswal/Desktop/My Documents/hello-world/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/adhaarjaiswal/Desktop/My Documents/hello-world/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCiAgI2Rhc2hib2FyZC0yIHsKICAgIG1hcmdpbjogNzBweCAxNXB4IDAgMTVweCAhaW1wb3J0YW50OwogIH0KCiAgLmNvaW4gewogICAgbGluZS1oZWlnaHQ6IDUzcHg7CiAgICBmb250LXNpemU6IDQ4cHg7CiAgICBvcGFjaXR5OiAwLjM1OwogIH0KCi5jb2luOmhvdmVyewogIG9wYWNpdHk6IDE7CiAgY3Vyc29yOiBwb2ludGVyOwp9Ci5saXN0LWdyb3VwewogIG1pbi1oZWlnaHQ6IDE1MHB4OwogICAgYm9yZGVyOiAxcHggc29saWQgbGlnaHRzYWxtb247CiAgICBib3JkZXItcmFkaXVzOiA1cHg7Cn0KLmxpc3QtZ3JvdXAtaXRlbTpob3ZlcnsKICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDg3LCAxNDUsIDE2MCwgMC4wNSk7Cn0KLmJ0bi1vdXRsaW5lLWxpZ2h0ewogIG9wYWNpdHk6IDAuMzU7CiAgYm9yZGVyLWNvbG9yOiAjNTc5MWEwOwogIGN1cnNvcjogcG9pbnRlcjsKfQouYnRuLW91dGxpbmUtbGlnaHQ6aG92ZXJ7CiAgb3BhY2l0eTogMTsKICBib3JkZXItY29sb3I6IzU3OTFhMDsKICBjdXJzb3I6IHBvaW50ZXI7Cn0KICAuU21Db2luIHsKICAgIGZvbnQtc2l6ZTogMjBweDsKICB9CgogIC5pbmZvewoKICAgIGJhY2tncm91bmQtY29sb3I6ICM1NzkxYTA7CiAgfQogIC5saXN0LWdyb3VwW2RhdGEtdi0wZWI2NWI2Y10gewogIGJvcmRlcjogMXB4IHNvbGlkICM1NzkxYTAgIWltcG9ydGFudDsKICB9CiAgaDN7CiAgY29sb3I6IHdoaXRlICFpbXBvcnRhbnQ7CiAgfQogIC5zbGlkZXIuc2xpZGVyLWhvcml6b250YWwgewogICAgd2lkdGg6IDQ2MHB4ICFpbXBvcnRhbnQ7Cn0K"},{"version":3,"sources":["DashboardOne.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgNA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"DashboardOne.vue","sourceRoot":"src/components","sourcesContent":["/* eslint-disable vue/no-use-v-if-with-v-for */\n<template>\n  <div id=\"dashboard-2\">\n    <nav class=\"navbar navbar-expand-md navbar-light fixed-top bg-light prim\">\n      <div class=\"logocontainer\">\n      </div>\n\n\n\n      <a class=\"navbar-brand\" href=\"#\">transferpage</a>\n      <button class=\"navbar-toggler hidden-lg-up\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarCollapse\" aria-controls=\"navbarCollapse\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            &#9776;\n         </button>\n      <div class=\"collapse navbar-collapse\" id=\"navbarCollapse\">\n        <ul class=\"navbar-nav mr-auto\">\n          <li class=\"nav-item active\">\n            <a class=\"nav-link\" href=\"#\">Home <span class=\"sr-only\">(current)</span></a>\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" href=\"#\">Terms</a>\n          </li>\n\n        </ul>\n        <form class=\"form-inline mt-2 mt-md-0\" _lpchecked=\"1\">\n          - logged in as -&nbsp;\n          <button class=\"btn btn-outline-primary my-2 my-sm-0\" variant=\"primary\" type=\"button\" @click=\"logout\">logout</button>\n        </form>\n      </div>\n    </nav>\n\n    <div class=\"row\">\n      <div class=\"col-sm-12 col-md-8 col-xl-8\">\n        <div class=\"idb-block\">\n          <div class=\"idb-block-title\">\n            <div class=\"d-flex justify-content-between\">\n              <div class=\"d-flex align-self-center\">\n                <h2>drag me araund</h2>\n\n              </div>\n            </div>\n          </div>\n          <div class=\"idb-full-block\">\n            <div class=\"text-center currencies\">\n              <div class=\"row container\" style=\"margin: 15px 0 15px 0;\" v-dragula=\"copyOne\" service=\"my-third\" drake=\"a\" id='source'>\n                <div class=\"col\" v-for=\"(item, i) in items\" :id=\"item\" :key=\"i\">\n                  <i :class=\"'coin fa fa-'+item\"></i> <!-- these items can dropped (copied) to '.list-group', but NOT to myCurrencies-->\n                </div>\n              </div>\n            </div>\n            <div class=\"align-self-center myWallet\" style=\"margin-top: 15px;\">\n              <div class=\"container\">\n                <ul class=\"list-group\"  v-dragula=\"copyTwo\" service=\"my-third\" drake=\"a\" id='target'>\n                  <li class=\"list-group-item\" v-for=\"(item, i) in myWallee\" :key=\"i\">\n                    <!-- these items can dropped (copied) to 'myCurrencies', but NOT to Currencies-->\n                      <div class=\"row\">\n                        <div class=\"col-1\" v-on:click=\"openModal\">\n                          <i :class=\"'SmCoin fa fa-'+item\"></i>\n                        </div>\n                        <div class=\"col\">{{item.toUpperCase()}}</div>\n                        <div class=\"col\"></div>\n                        <div class=\"col\"></div>\n                        <div class=\"col\"></div>\n                      </div>\n\n                  </li>\n                </ul>\n              </div>\n            </div>\n            <div class=\"text-center coins\">\n              <div v-if=\"myCurrencies.length >= 0\" class=\"row\"  style=\"margin-top: 15px\">\n                  \n                <div class=\"col\" v-for=\"(item, i) in myCurrencies\" :id=\"item\" :key=\"i\">\n                  <div class=\"drop btn btn-outline-light rounded-circle square-50 btn-circle\">\n                    <i :class=\"'fa fa-'+item\"></i>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"idb-block-title\">\n            <div class=\"d-flex justify-content-between\">\n              Footer\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-sm-12 col-md-4 col-xl-4\">\n        <div class=\"idb-block\">\n          <div class=\"idb-block-title\">\n            <div class=\"d-flex justify-content-between\">\n              <div class=\"d-flex align-self-center\">\n                <h2>My Status</h2>\n              </div>\n\n            </div>\n          </div>\n          <div class=\"idb-block-content\">\n\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"row\">\n\n\n      <div class=\"col-sm-12 col-md-12 col-xl-12\">\n        <div class=\"idb-block\">\n          <div class=\"idb-block-title\">\n            <div class=\"d-flex justify-content-between\">\n              <div class=\"d-flex align-self-center\">\n                <h2>Actual charts</h2>\n              </div>\n            </div>\n            <div class=\"seriescheck\" style=\"text-align:center;\">\n           <input type=\"checkbox\" id=\"BTC\" value=\"BTC\" v-model=\"checkedSeries\" @click=\"serieschange($event)\" true-value=\"yes\"\n  false-value=\"no\">\n         <label for=\"BRC\">BRC</label>\n         <input type=\"checkbox\" id=\"ETH\" value=\"ETH\" v-model=\"checkedSeries\" @click=\"serieschange($event)\">\n         <label for=\"ETH\">ETH</label>\n         <input type=\"checkbox\" id=\"XRP\" value=\"XRP\" v-model=\"checkedSeries\" @click=\"serieschange($event)\">\n         <label for=\"XRP\">XRP</label>\n         <input type=\"checkbox\" id=\"NEO\" value=\"NEO\" v-model=\"checkedSeries\" @click=\"serieschange($event)\">\n         <label for=\"NEO\">NEO</label>\n         <input type=\"checkbox\" id=\"IOT\" value=\"IOT\" v-model=\"checkedSeries\" @click=\"serieschange($event)\">\n         <label for=\"IOT\">IOT</label>\n         </div>\n          </div>\n          <div class=\"idb-block-content\" id=\"container\">\n           <vue-highcharts :options=\"options\" ref=\"highcharts\"></vue-highcharts>\n    <button @click=\"load\">load</button>\n\n          </div>\n        </div>\n      </div>\n    </div>\n    <b-modal class=\"modal fade\" ref=\"transModal\">\n      <div class=\"modal-dialog\" role=\"document\">\n        <div class=\"modal-content\">\n          <div class=\"modal-header info\">\n            <h5 class=\"modal-title\" id=\"exampleModalLabel\">transaction</h5>\n            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n              <span aria-hidden=\"true\">&times;</span>\n            </button>\n          </div>\n          <div class=\"modal-body\">\n\n          </div>\n          <div class=\"modal-footer\">\n            <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n            <button type=\"button\" class=\"btn btn-primary\">Save changes</button>\n          </div>\n        </div>\n      </div>\n    </b-modal>\n\n<button @click=\"openModal\">open</button>\n\n    <b-modal ref=\"myModalRef\" hide-header hide-footer>\n\n      <div class=\"viewjs-modal-pop\">\n                                   <i v-bind:class=\"'SmCoin fa fa-'+ this.targetIcon \" style=\"color:white;\"></i>\n\n            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" @click=\"hideModal\">\n              <span aria-hidden=\"true\">&times;</span>\n            </button>\n     </div>\n\n\n         <div class=\"modalmaterial\">\n            <div id='targeticonsdiv'>\n            <ul id='targeticons' style=\"display:none;\">\n      <li v-for=\"(input, index) in inputs\" :key=\"index\">\n       <div class=\"col-1\" v-on:click=\"openModal\">\n                        </div>\n       </li>\n      </ul>\n      </div>\n      <div id=\"modalcheckboxes\">\n            <input type=\"radio\" id=\"buy\" :value=\"0\" v-model=\"checked\">\n              <label for=\"buy\">buy</label>\n  <input type=\"radio\" id=\"sell\" :value=\"1\" v-model=\"checked\">\n  <label for=\"sell\">sell</label>\n  <input type=\"radio\" id=\"send\" :value=\"2\" v-model=\"checked\">\n  <label for=\"send\">send</label>\n  </div>\n\n <div class=\"popslider\">\n<b-form-slider v-model=\"rangeValue\"  :min=0 :max=10000 :step=0.001 @change=\"change\"></b-form-slider></div>\n      <p>New price: {{ rangeValue }}</p>\n\n\n\n\n\n\n\n\n            <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\" @click=\"hideModal\">Close</button>\n            <button type=\"button\" class=\"btn btn-primary\">Save changes</button>\n</div>\n    </b-modal>\n\n  </div>\n\n</template>\n\n<style scoped>\n  #dashboard-2 {\n    margin: 70px 15px 0 15px !important;\n  }\n\n  .coin {\n    line-height: 53px;\n    font-size: 48px;\n    opacity: 0.35;\n  }\n\n.coin:hover{\n  opacity: 1;\n  cursor: pointer;\n}\n.list-group{\n  min-height: 150px;\n    border: 1px solid lightsalmon;\n    border-radius: 5px;\n}\n.list-group-item:hover{\n  background-color: rgba(87, 145, 160, 0.05);\n}\n.btn-outline-light{\n  opacity: 0.35;\n  border-color: #5791a0;\n  cursor: pointer;\n}\n.btn-outline-light:hover{\n  opacity: 1;\n  border-color:#5791a0;\n  cursor: pointer;\n}\n  .SmCoin {\n    font-size: 20px;\n  }\n\n  .info{\n\n    background-color: #5791a0;\n  }\n  .list-group[data-v-0eb65b6c] {\n  border: 1px solid #5791a0 !important;\n  }\n  h3{\n  color: white !important;\n  }\n  .slider.slider-horizontal {\n    width: 460px !important;\n}\n</style>\n\n<script>\n  import VueHighcharts from 'vue2-highcharts'\n  import moment from 'moment'\n\nconst asyncData = {\n  name: 'Amount',\n  marker: {\n    symbol: 'square'\n  },\n  data: []\n}\n  export default {\n    name: 'dashboard-1',\n    components: {\n      VueHighcharts\n    },\n    created () {\n      this.$socket.emit('initgraph', 'kmb')\n      var locale = window.navigator.userLanguage || window.navigator.language\n      moment.locale(locale)\n     // this.$socket.emit('initgraph', this.user)\n      console.log('NAMED SERVICES: ready')\n\n    let dragula = this.$dragula\n\n    let myservice = dragula.$service;\n    myservice.eventBus.$on('drop', this.handleDrop)\n    this.chartoptions.push({ text: 'Default', value: 'default' })\n\n\n    },\n    mounted () {\n      //this.load()\n    },\n    data: function () {\n      return {\n        modalShow: false,\n        over: false,\n        first: true,\n        max: 60,\n        items: ['angellist','bus','car','skyatlas','diamond'],\n        myCurrencies: ['euro','inr','usd'],\n        myWallee: ['bus'],\n        myHTML: '',\n        targetheading: '',\n        targetIcon: '',\n        copyOne: [],\n        inputs: [],\n        inputs2: [],\n        chartoptions: [],\n        checked: '',\n         selected: 'default',\n        copyTwo: [],\n        checkedSeries: [],\n         series: [],\n          series1: [],           \n          series2: [], \n          series3: [],\n          series4: [],\n          series5: [],\n        rangeValue: 0,\n        options: {\n          chart: {\n            type: 'line'\n          },\n          title: {\n            text: ''\n          },\n          subtitle: {\n            text: ''\n          },\n          xAxis: {\n           title: {\n              text: 'Time'\n            },\n              categories: []\n          },\n          yAxis: {\n             title: {\n              text: 'Amount'\n            },\n           labels: {\n              formatter: function () {\n                return  '$'+' '+this.value;\n              }\n            }\n          },          \n          tooltip: {\n            crosshairs: true,\n            shared: true\n          },\n          credits: {\n            enabled: false\n          },\n          plotOptions: {\n            spline: {\n              marker: {\n                radius: 4,\n                lineColor: '#666666',\n                lineWidth: 1\n              }\n            }\n          },         \n    responsive: {\n        rules: [{\n            condition: {\n                maxWidth: 500\n            },\n            chartOptions: {\n                legend: {\n                    layout: 'horizontal',\n                    align: 'center',\n                    verticalAlign: 'bottom'\n                }\n            }\n        }]\n    },\n          names:  [],         \n          dates: [],\n          dates1: [],           \n          dates2: [], \n          dates3: [],\n          dates4: [],\n          dates5: [],\n          valuesarray: [],\n          datesarray:  [],\n          count: 0,\n          seriescount: 0,\n          initialcount: 0\n        }\n      }\n    },\n    methods: {\n      admin () {\n        //\n      },\n      logout () {\n        //\n      },\n      toggleModal () {\n        this.showModal = !this.showModal\n      },\n       showModal () {\n      this.$refs.myModalRef.show()\n    },\n    hideModal () {\n      this.$refs.myModalRef.hide()\n     this.checked=0;\n\n    },\n      openModal () {\n        // console.log(this.$refs.transModal())\n        this.$refs.transModal.show()\n      },\n      closeModal () {\n        this.showModal = false\n      },\n      handleDrop (dropdata) {\n    if(dropdata.source.id=='source'){\n    if(document.getElementById('targeticons').innerHTML!=\"\"){\n     document.getElementById('targeticons').innerHTML=\"\"\n     }\n    /* if(document.getElementById('targetnodes').innerHTML!=\"\"){\n     document.getElementById('targetnodes').innerHTML=\"\"\n     }*/\n        this.over = false\n\n        var targetnodes = dropdata.container.childNodes;\n        var targetlength = dropdata.container.childNodes.length;\n\n         this.targetIcon = dropdata.el.id\n         console.log(targetnodes);\n        console.log(\"target\"+this.targetIcon);\n        this.targetheading = \"Target Nodes\";\n         this.rangeValue = 1234.5;\n        for(var i=0;i<targetlength;i++){\n        if(targetnodes[i].id!=\"\"){\n         this.inputs.push({\n        type: targetnodes[i].id,\n        amount: 1234.5\n      })\n        }\n        }\n\n\n        this.showModal()\n        }\n        // alert(`You dropped with data: ${JSON.stringify(dropdata)}`)\n      },\n      handleListDrop (dropdata) {\n          console.log(dropdata)\n        this.openModal()\n        // alert(`You dropped with data: ${JSON.stringify(dropdata)}`)\n      },\n      onSubmit (evt) {\n        evt.preventDefault()\n      },\n      showSuccess (file) {\n          console.log(file);\n        // console.log('A file was successfully uploaded')\n      },\n       change: function(value) {\n            console.log(value);\n          },\n       serieschange : function(e) {\n       \n       var seriesLength = this.$refs.highcharts.chart.series.length;\n       console.log(\"old\"+ seriesLength)\n       if(seriesLength>0){\n                for(var i = seriesLength - 1; i > -1; i--)\n                {\n\n                       this.$refs.highcharts.chart.series[i].remove();\n                }\n                }\n         var seriesLength2 = this.$refs.highcharts.chart.series.length;\n       console.log(\"new\"+ seriesLength2)\n      if (e.target.checked) {\n        console.log(e.target)\n        this.checkedSeries.push(e.target.value)\n      }\n      else {\n      console.log(\"removed\"+e.target.value)\n      this.checkedSeries.splice(this.checkedSeries.indexOf(e.target.value), 1);\n      }\n      this.load()\n      },\n     load(){\n     console.log(asyncData.data)\n     if(this.checkedSeries.length==0){\n   \n    \n  \n          this.series.push(this.series1)\n          this.series.push(this.series2)\n          this.series.push(this.series3)\n          this.series.push(this.series4)\n          this.series.push(this.series5) \n           var chunksize2 = this.series.length/5;\n         var arrays = [], size2 = chunksize2;\n         while (this.series.length > 0)\n    arrays.push(this.series.splice(0, size2));\n    \n           var chart = this.$refs.highcharts.chart;\n         chart.showLoading();\n          document.getElementById(\"BTC\").disabled = true;\n          document.getElementById(\"ETH\").disabled = true;\n          document.getElementById(\"XRP\").disabled = true;\n          document.getElementById(\"NEO\").disabled = true;\n          document.getElementById(\"IOT\").disabled = true;\n          setTimeout(() => {\n            // chart.addSeries(asyncData);             \n           for(var k=0;k<arrays.length;k++){\n           console.log(arrays[k])\n\t\t\tchart.addSeries({ \n\t\t\tid:    k,                       \n\t\t\t\tname: this.options.names[k],\n\t\t\t\tdata: arrays[k][0]\n\t\t\t});\n          }\n          chart.hideLoading();\n          document.getElementById(\"BTC\").disabled = false;\n          document.getElementById(\"ETH\").disabled = false;\n          document.getElementById(\"XRP\").disabled = false;\n          document.getElementById(\"NEO\").disabled = false;\n          document.getElementById(\"IOT\").disabled = false;\n               }, 2000)\n              \n                \n\n               \n                 \n               }\n               else{\n    \n        \n       \n\nthis.series.push(this.series1)\n          this.series.push(this.series2)\n          this.series.push(this.series3)\n          this.series.push(this.series4)\n          this.series.push(this.series5) \n            chunksize2 = this.series.length/5;\n          arrays = [], size2 = chunksize2;\n         while (this.series.length > 0)\n    arrays.push(this.series.splice(0, size2));\n    \n            chart = this.$refs.highcharts.chart;\n         chart.showLoading();\n          document.getElementById(\"BTC\").disabled = true;\n          document.getElementById(\"ETH\").disabled = true;\n          document.getElementById(\"XRP\").disabled = true;\n          document.getElementById(\"NEO\").disabled = true;\n          document.getElementById(\"IOT\").disabled = true;\n          setTimeout(() => {\n                var seriesid = 0;\n            // chart.addSeries(asyncData);             \n           for(var k=0;k<arrays.length;k++){\n       if(this.checkedSeries.includes(this.options.names[k])==true){       \n       if(this.options.names[k]==\"BTC\"){\n        seriesid = 0;\n       }\n      else if(this.options.names[k]==\"ETH\"){\n        seriesid = 1;\n       }\n       else if(this.options.names[k]==\"XRP\"){\n        seriesid = 2;\n       }\n       else if(this.options.names[k]==\"NEO\"){\n        seriesid = 3;\n       }\n       else if(this.options.names[k]==\"IOT\"){\n        seriesid = 4;\n       }\n           console.log(arrays[k])\n\t\t\tchart.addSeries({   \n\t\t\tid:    seriesid,        \n\t\t\t\tname: this.options.names[k],\n\t\t\t\tdata: arrays[k][0]\n\t\t\t});\n\t\t\t}\n          }\n          chart.hideLoading();\n          document.getElementById(\"BTC\").disabled = false;\n          document.getElementById(\"ETH\").disabled = false;\n          document.getElementById(\"XRP\").disabled = false;\n          document.getElementById(\"NEO\").disabled = false;\n          document.getElementById(\"IOT\").disabled = false;\n               }, 2000)\n              \n\n               } \n               \n                 \n            \n       \n           this.series.length = 0;\n       }\n   \n\n    },\n    sockets: {\n      config (data) {\n       console.log(data);\n      },\n      initgraph (data) {\n        console.log('initgraph')\n        let curSeries = []\n        curSeries[0] = []\n        curSeries[1] = []\n        curSeries[2] = []\n        curSeries[3] = []\n        curSeries[4] = []\n        if (this.first) {\n          this.first = false\n          for (var i = 0; i < data.dates.length; i++) {\n          this.chartoptions.push({ text: data.symbols[i], value: data.symbols[i] })\n            curSeries[i]['name'] = data.symbols[i]\n          curSeries[i]['dates'] = moment(data.dates[i]).format('LT')\n           // curSeries[i]['dates'] = moment(data.dates[i]).format('HH:mm')\n            curSeries[i]['values'] = data.values[i]\n            \n            console.log(i, curSeries)\n            if(i==0){\n            for(var b=0;b<curSeries.length;b++){\n             if(b==0){\n            this.series1.push(data.values[b])\n            this.options.names.push(data.symbols[b])\n            this.options.dates1.push(moment(data.dates[b]).format('LT'));\n            }\n           else if(b==1){\n            this.series2.push(data.values[b])\n            this.options.names.push(data.symbols[b])\n            this.options.dates2.push(moment(data.dates[b]).format('LT'));\n            }\n           else if(b==2){\n            this.series3.push(data.values[b])\n            this.options.names.push(data.symbols[b])\n            this.options.dates3.push(moment(data.dates[b]).format('LT'));\n            }\n            else if(b==3){\n            this.series4.push(data.values[b])\n            this.options.names.push(data.symbols[b])\n            this.options.dates4.push(moment(data.dates[b]).format('LT'));\n            }\n             else if(b==4){\n            this.series5.push(data.values[b])\n            this.options.names.push(data.symbols[b])\n            this.options.dates5.push(moment(data.dates[b]).format('LT'));\n            }\n            // this.series[i]['dates'].push(moment(data.dates[i]).format('LT'))\n \n           }\n           \n            }\n            }\n          }\n     this.options.initialcount++;\n      },\n      graph (data) {\n\n    \n           console.log(\"first\"+this.series1.length)\n   console.log(\"second\"+this.series2.length)\n    console.log(\"third\"+this.series3.length)\n     console.log(\"fourth\"+this.series4.length)\n      console.log(\"fifth\"+this.series5.length)\n      \n      //console.log(asyncData);\n         if (data.dates.length === 5) {\n      console.log('next')        \n        // console.log(data);\n\n          \n           console.log(\"seriescount\"+this.seriescount)\n\n           this.seriescount++;\n        \n            \n           if(this.$refs.highcharts.chart.series.length>0){\n            \n           \n           console.log(\"intial\"+this.options.initialcount)\n           if(this.options.initialcount==1){\n           if(this.checkedSeries.length==0){\n        //     console.log(asyncData)\n                this.$refs.highcharts.chart.series[0].addPoint([moment(data.dates[0]).format('LT'),data.values[0]]);\n           this.$refs.highcharts.chart.series[1].addPoint([moment(data.dates[1]).format('LT'),data.values[1]]);\n           this.$refs.highcharts.chart.series[2].addPoint([moment(data.dates[2]).format('LT'),data.values[2]]);\n           this.$refs.highcharts.chart.series[3].addPoint([moment(data.dates[3]).format('LT'),data.values[3]]);\n           this.$refs.highcharts.chart.series[4].addPoint([moment(data.dates[4]).format('LT'),data.values[4]]);\n          \n          \n\n           }\n           else{\n          \n                var id1 = 0;\n          var id2 = 1;\n          var id3 = 2;\n          var id4 = 3;\n          var id5 = 4;\n          console.log(this.$refs.highcharts.chart) \n          console.log(this.seriescount)\n          if ( this.$refs.highcharts.chart.get( id1 ) ) {\n           var currentseries1 = this.$refs.highcharts.chart.get(id1)\n             currentseries1.data[0].remove(false, false);\n         currentseries1.addPoint([moment(data.dates[0]).format('LT'),data.values[0]]);\n          \n           }\n           if(this.$refs.highcharts.chart.get( id2 )){\n           \n           var currentseries2 = this.$refs.highcharts.chart.get(id2)\n        console.log(\"first\"+data.dates[1]);\n        currentseries2.data[0].remove(false, false);\n         currentseries2.addPoint([moment(data.dates[1]).format('LT'),data.values[1]]);\n         \n           }\n         if(this.$refs.highcharts.chart.get( id3 )){\n           \n           var currentseries3 = this.$refs.highcharts.chart.get(id3)\n     console.log(\"second\"+data.dates[2]);\n     currentseries3.data[0].remove(false, false);\n          currentseries3.addPoint([moment(data.dates[2]).format('LT'),data.values[2]]);\n           \n           }\n           if(this.$refs.highcharts.chart.get( id4 )){\n           \n           var currentseries4 = this.$refs.highcharts.chart.get(id4)\n     console.log(\"third\"+data.dates[3]);\n     currentseries4.data[0].remove(false, false);\n          currentseries4.addPoint([moment(data.dates[3]).format('LT'),data.values[3]]);\n         \n           }\n           if(this.$refs.highcharts.chart.get( id5 )){\n           \n           var currentseries5 = this.$refs.highcharts.chart.get(id5)\n          console.log(\"fourth\"+currentseries5);\n          currentseries5.data[0].remove(false, false);\n          currentseries5.addPoint([moment(data.dates[4]).format('LT'),data.values[4]]);\n       \n           }\n           \n            \n         this.series1.push(data.values[0])\n          this.series2.push(data.values[1])\n          this.series3.push(data.values[2])\n          this.series4.push(data.values[3])\n          this.series5.push(data.values[4]) \n      \n               var contains = function(needle) {\n    // Per spec, the way to identify NaN is that it is not equal to itself\n    var findNaN = needle !== needle;\n    var indexOf;\n\n    if(!findNaN && typeof Array.prototype.indexOf === 'function') {\n        indexOf = Array.prototype.indexOf;\n    } else {\n        indexOf = function(needle) {\n            var i = -1, index = -1;\n\n            for(i = 0; i < this.length; i++) {\n                var item = this[i];\n\n                if((findNaN && item !== item) || item === needle) {\n                    index = i;\n                    break;\n                }\n            }\n\n            return index;\n        };\n    }\n\n    return indexOf.call(this, needle) > -1;\n};\n\nvar myArray = this.options.xAxis.categories\n   var needle = moment(data.dates[4]).format('LT')\n    var index = contains.call(myArray, needle); // true\n       if(index==false){   \n           this.options.xAxis.categories.push(moment(data.dates[4]).format('LT'))\n           }\n           console.log(\"index\"+index);\n \n         \n  console.log(\"latestdates\"+this.options.xAxis.categories)\n            \n           }\n           }\n        else{\n        this.options.initialcount=1;\n        console.log('done'+this.options.initialcount)\n        }\n           }\n       \n           else{\n            if(this.options.initialcount==1){\n            console.log(\"start\");\n           for (var i = 0; i < data.dates.length; i++) {\n             \n            if(i==0){\n            this.series1.push(data.values[i])\n            this.options.dates1.push(moment(data.dates[i]).format('LT'));\n            }\n           else if(i==1){\n            this.series2.push(data.values[i])\n            this.options.dates2.push(moment(data.dates[i]).format('LT'));\n            }\n           else if(i==2){\n            this.series3.push(data.values[i])\n            this.options.dates3.push(moment(data.dates[i]).format('LT'));\n            }\n            else if(i==3){\n            this.series4.push(data.values[i])\n            this.options.dates4.push(moment(data.dates[i]).format('LT'));\n            }\n             else if(i==4){\n            this.series5.push(data.values[i])\n            this.options.dates5.push(moment(data.dates[i]).format('LT'));\n             this.options.dates.push(moment(data.dates[i]).format('LT'))\n      \n            this.options.xAxis.categories.push(moment(data.dates[4]).format('LT'))\n            }\n            // this.series[i]['dates'].push(moment(data.dates[i]).format('LT'))\n                   \n            console.log(\"x\"+this.options.xAxis.categories);\n           \n           \n           }\n           }\n           }\n           }\n            \n\n      }\n    }\n  }\n</script>\n<style>\n.slider.slider-horizontal {\n    width: 460px !important;\n}\n.modalmaterial {\n    padding: 15px;\n}\n.modal-body{padding:0;}\n.viewjs-modal-pop{ background-color: #5791a0;padding:10px 15px;}\n.popslider {\n    position: relative;\n}\n@media screen and (max-width:520px){\n.slider.slider-horizontal {\n    width: 90%;\n    position: static;\n}\n\n}\n\n</style>\n"]}]}